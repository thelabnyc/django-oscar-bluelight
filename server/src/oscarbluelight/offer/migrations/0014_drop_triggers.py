# Generated by Django 3.2.19 on 2023-06-01 13:03
from django.db import migrations, models

range_product_trigger_tables = [
    "catalogue_category",
    "catalogue_product",
    "catalogue_productcategory",
    "catalogue_productclass",
    "offer_range",
    "offer_range_classes",
    "offer_range_excluded_products",
    "offer_range_included_categories",
    "offer_rangeproduct",
]

drop_triggers = ["DROP FUNCTION IF EXISTS refresh_offer_rangeproductset() CASCADE;"]
for table in range_product_trigger_tables:
    for event in "INSERT", "UPDATE", "DELETE":
        drop_triggers.append(
            f"DROP TRIGGER IF EXISTS refresh_refresh_offer_rangeproductset_{event} ON {table} CASCADE;"
        )


class Migration(migrations.Migration):
    dependencies = [
        ("offer", "0013_alter_offergroup_slug"),
    ]

    operations = [
        migrations.RunSQL(sql, migrations.RunSQL.noop) for sql in drop_triggers
    ] + [
        migrations.CreateModel(
            name="RangeProductSetRefreshLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("refreshed_on", models.DateTimeField()),
            ],
            options={
                "ordering": ("-refreshed_on",),
            },
        ),
        migrations.AlterField(
            model_name="benefit",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="condition",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="conditionaloffer",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="offergroup",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="range",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="rangeproduct",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="rangeproductfileupload",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AddIndex(
            model_name="rangeproductsetrefreshlog",
            index=models.Index(
                fields=["refreshed_on"], name="offer_range_refresh_960290_idx"
            ),
        ),
    ]
