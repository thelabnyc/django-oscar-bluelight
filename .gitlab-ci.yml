variables:
  POSTGRES_DB: postgres
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: ''
  POSTGRES_HOST_AUTH_METHOD: 'trust'

stages:
  - test
  - release

services:
  - postgres:latest
  - redis:latest

cache:
  key: '$CI_PROJECT_NAME'
  paths:
    - node_modules
    - $HOME/.cache/pip

precommit:
  stage: test
  image: python:3
  variables:
    PRE_COMMIT_HOME: ${CI_PROJECT_DIR}/.cache/pre-commit
  script:
    - pip3 install pre-commit
    - pre-commit run --all-files
  cache:
    paths:
      - ${PRE_COMMIT_HOME}

lint_typescript:
  stage: test
  image: node:20
  script:
    - cd client/
    - NODE_ENV=dev yarn
    - yarn run lint
    - NODE_ENV=production node_modules/.bin/webpack

test:
  stage: test
  image: "registry.gitlab.com/thelabnyc/python:${IMAGE}"
  script:
    - cd server/
    - pip install tox
    - tox
  coverage: '/^TOTAL.+?(\d+\%)$/'
  parallel:
    matrix:
      - IMAGE: py310
        TOX_SKIP_ENV: "^(?!py310-)"
      - IMAGE: py311
        TOX_SKIP_ENV: "^(?!py311-)"
      - IMAGE: py312
        TOX_SKIP_ENV: "^(?!py312-)"

publish_pkg:
  image: registry.gitlab.com/thelabnyc/python:py311
  stage: release
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED
  script:
    - cd server/
    - pip install twine
    - poetry build
    # Publish to PyPI
    - export TWINE_USERNAME=__token__
    - export TWINE_PASSWORD=${PYPI_TOKEN}
    - python -m twine upload
      --repository-url https://upload.pypi.org/legacy/
      dist/*
    # Publish to Gitlab
    - export TWINE_USERNAME=gitlab-ci-token
    - export TWINE_PASSWORD=${CI_JOB_TOKEN}
    - python -m twine upload
      --verbose
      --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi
      dist/*

publish_gitlab_release:
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  stage: release
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED
  script:
    - echo 'release job'
  release:
    name: 'Release $CI_COMMIT_TAG'
    description: 'Release $CI_COMMIT_TAG. Tagged by $GITLAB_USER_LOGIN'
    tag_name: '$CI_COMMIT_TAG'
    ref: '$CI_COMMIT_TAG'
